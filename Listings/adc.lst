C51 COMPILER V9.60.0.0   ADC                                                               06/13/2022 14:10:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\adc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\adc.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\adc.lst) OBJECT(.\Objects\adc.obj)

line level    source

   1          #include "adc.h"
   2          
   3          xdata u8 ADC_AIN_ch=0;
   4          void Init_Adc(void)
   5          {
   6   1          PORT_SetP1AInputOnly(BIT0|BIT1|BIT2|BIT3|BIT4);             //设置P10仅输入，做ADC输入通道
   7   1          
   8   1              ADC_Enable();                                           // 使能ADC
   9   1              ADC_SetClock_SYSCLKDiv2();                      // ADC转换时钟为 SYSCLK       转换率= ADC_CLK/30
  10   1          //ADC_SetClock_SYSCLKDiv4();
  11   1              ADC_SetMode_SetADCS();                          // ADC启动模式, 置ADCS
  12   1              ADC_SetRightJustified();                        // ADC转换数据右对齐
  13   1      
  14   1              //ADC_SetVREF_IVR24();                          // 设置VREF+ 为内部2.4V
  15   1          ADC_SetVREF_VDDA();
  16   1      
  17   1              ADC_SetChannel_AIN0();                          // 选择通道为AIN0(P10)
  18   1      
  19   1          //INT_EnADC();                        // 开启中断
  20   1      }
  21          
  22          void ADC_Inquire(void)
  23          {
  24   1          xdata WordTypeDef wAdcValue;
  25   1      
  26   1          if((ADCON0&ADCI)==0);                                       // 等待ADC转换完成
  27   1          else 
  28   1          {
  29   2              wAdcValue.B.BHigh = ADCDH;
  30   2              wAdcValue.B.BLow = ADCDL;
  31   2              ADCON0 = ADCON0&(~ADCI);                                        // 清标志位
  32   2              switch(ADC_AIN_ch)
  33   2              {
  34   3                  case 0:
  35   3                      RAM_BAT_SUM += (wAdcValue.W & 0x0FFF);
  36   3                      RAM_BAT_CNT++;
  37   3                      if(RAM_BAT_CNT >= 20)
  38   3                      {
  39   4                          RAM_BAT_CNT = 0;
  40   4                          RAM_BAT_AVG = RAM_BAT_SUM / 20;
  41   4                          BAT_Voltage_value = 921600 / RAM_BAT_AVG;   //??????0.9V.
  42   4                          RAM_BAT_SUM = 0;
  43   4                          Falg_ADC_Battery=1;
  44   4                      }                
  45   3                      break;
  46   3                  
  47   3                  case 1:
  48   3                      if(wAdcValue.W < 0x200) PIN_KEY_STOP=0;
  49   3                      else                    PIN_KEY_STOP=1;
  50   3                      break;
  51   3                  
  52   3                  case 2:
  53   3                      if(wAdcValue.W < 0x200) PIN_KEY_OPEN=0;
  54   3                      else                    PIN_KEY_OPEN=1;                
C51 COMPILER V9.60.0.0   ADC                                                               06/13/2022 14:10:38 PAGE 2   

  55   3                      break;
  56   3                  
  57   3                  case 3:
  58   3                      if(wAdcValue.W < 0x200) PIN_KEY_CLOSE=0;
  59   3                      else                    PIN_KEY_CLOSE=1;                 
  60   3                      break; 
  61   3                  
  62   3                  case 4:
  63   3                      if(wAdcValue.W < 0x200) PIN_KEY_LOGIN=0;
  64   3                      else                    PIN_KEY_LOGIN=1;                
  65   3                      break;  
  66   3                  
  67   3                  default:
  68   3                      break;
  69   3              }
  70   2              if(Falg_ADC_Battery==1) ADC_AIN_ch++;
  71   2              if(ADC_AIN_ch>4)        ADC_AIN_ch=1;
  72   2              switch(ADC_AIN_ch)
  73   2              {
  74   3                  case 0:
  75   3                      ADC_SetChannel_AIN0();                          //AIN0(P10)               
  76   3                      break;
  77   3                  
  78   3                  case 1:
  79   3                      ADC_SetChannel_AIN1();                          //AIN1(P11)
  80   3                      break;
  81   3                  
  82   3                  case 2:
  83   3                      ADC_SetChannel_AIN2();                          //AIN2(P12)              
  84   3                      break;
  85   3                  
  86   3                  case 3:
  87   3                      ADC_SetChannel_AIN3();                          //AIN2(P13)                
  88   3                      break; 
  89   3                  
  90   3                  case 4:
  91   3                      ADC_SetChannel_AIN4();                          //AIN2(P14)               
  92   3                      break; 
  93   3                  
  94   3                  default:
  95   3                      break;
  96   3              }        
  97   2              ADC_SoftStart();        
  98   2          }
  99   1      }
 100          
 101          void INT_ADC(void) interrupt INT_VECTOR_ADC
 102          {
 103   1          xdata WordTypeDef wAdcValue;
 104   1          wAdcValue.B.BHigh = ADCDH;
 105   1          wAdcValue.B.BLow = ADCDL;
 106   1          RAM_BAT_SUM += (wAdcValue.W & 0x0FFF);
 107   1          RAM_BAT_CNT++;
 108   1          ADCON0 = ADCON0 & (~ADCI);                                  // ????λ
 109   1          ADC_SoftStart();
 110   1          if(RAM_BAT_CNT >= 20)
 111   1          {
 112   2              INT_DisADC();                               //???ADC?ж?
 113   2              ADC_Disable();                              //???ADC
 114   2                      RAM_BAT_CNT = 0;
 115   2                      RAM_BAT_AVG = RAM_BAT_SUM / 20;
 116   2              BAT_Voltage_value = 921600 / RAM_BAT_AVG;   //??????0.9V.
C51 COMPILER V9.60.0.0   ADC                                                               06/13/2022 14:10:38 PAGE 3   

 117   2                      RAM_BAT_SUM = 0;
 118   2          }
 119   1      }
 120          /*
 121          void Adc_Channel_Scan(u8 ch)
 122          {
 123              switch(ch)
 124              {
 125                  case 0:
 126                      ADC_SetChannel_AIN0();                              // 选择通道为AIN0(P10)
 127                      break;
 128                  
 129                  case 1:
 130                      ADC_SetChannel_AIN1();                              // 选择通道为AIN1(P11)
 131                      break;
 132                  
 133                  case 2:
 134                      ADC_SetChannel_AIN2();                              // 选择通道为AIN2(P12)
 135                      break;
 136                  
 137                  case 3:
 138                      ADC_SetChannel_AIN3();                              // 选择通道为AIN2(P13)
 139                      break;
 140                  
 141                  case 4:
 142                      ADC_SetChannel_AIN4();                              // 选择通道为AIN2(P14)
 143                      break;
 144                  
 145                  default:
 146                      break;
 147              }
 148          }
 149          
 150          void INT_ADC(void) interrupt INT_VECTOR_ADC
 151          {
 152              xdata WordTypeDef wAdcValue;
 153              wAdcValue.B.BHigh = ADCDH;
 154              wAdcValue.B.BLow = ADCDL;
 155              RAM_BAT_SUM += (wAdcValue.W & 0x0FFF);
 156              RAM_BAT_CNT++;
 157              ADCON0 = ADCON0 & (~ADCI);                                  // 清标志位
 158              ADC_SoftStart();
 159              if(RAM_BAT_CNT >= 5)
 160              {
 161                  Flag_adc_over = 1;
 162                  INT_DisADC();                               //关闭ADC中断
 163                  ADC_Disable();                              //关闭ADC
 164                  RAM_BAT_AVG = RAM_BAT_SUM / RAM_BAT_CNT;
 165                  RAM_BAT_CNT = 0;
 166                  if(channel == 0)
 167                  {
 168                      BAT_Voltage_value = 921600 / RAM_BAT_AVG;   //采集电压0.9V.//0.9 * 1024 = 921.6
 169                      RAM_BAT_SUM = 0;
 170                      channel = 1;
 171                      Adc_Channel_Scan(channel);
 172                  }
 173                  else if(channel == 1)
 174                  {
 175                      Adc_Value = (RAM_BAT_AVG * BAT_Voltage_value) / 1024;
 176                      if(Adc_Value < 1200)   Flag_KEY_STOP = 0;
 177                      else                   Flag_KEY_STOP = 1;
 178                      RAM_BAT_SUM = 0;
C51 COMPILER V9.60.0.0   ADC                                                               06/13/2022 14:10:38 PAGE 4   

 179                      channel = 2;
 180                      Adc_Channel_Scan(channel);
 181                  }
 182                  else if(channel == 2)
 183                  {
 184                      Adc_Value = (RAM_BAT_AVG * BAT_Voltage_value) / 1024;
 185                      if(Adc_Value < 1200)    Flag_KEY_OPEN = 0;
 186                      else                    Flag_KEY_OPEN = 1;
 187                      RAM_BAT_SUM = 0;
 188                      channel = 3;
 189                      Adc_Channel_Scan(channel);
 190                  }
 191                  else if(channel == 3)
 192                  {
 193                      Adc_Value = (RAM_BAT_AVG * BAT_Voltage_value) / 1024;
 194                      if(Adc_Value < 1200)    Flag_KEY_CLOSE = 0;
 195                      else                    Flag_KEY_CLOSE = 1;
 196                      RAM_BAT_SUM = 0;
 197                      channel = 4;
 198                      Adc_Channel_Scan(channel); 
 199                  } 
 200                  else if(channel == 4)
 201                  {
 202                      Adc_Value = (RAM_BAT_AVG * BAT_Voltage_value) / 1024;
 203                      if(Adc_Value < 1200)    Flag_KEY_LOGIN = 0;
 204                      else                    Flag_KEY_LOGIN = 1;
 205                      RAM_BAT_SUM = 0;
 206                      channel = 1;
 207                      Adc_Channel_Scan(channel);
 208                  }
 209              }
 210          }
 211          void Adc_Open(void)
 212          {
 213              ADC_Enable();
 214              INT_EnADC();
 215              Adc_Start(); 
 216          }
 217          void Adc_Close(void)
 218          {
 219              INT_DisADC();                               //关闭ADC中断
 220              ADC_Disable();
 221          }*/
 222          
 223          void Adc_Start(void)
 224          {
 225   1          ADC_SoftStart();
 226   1      }
 227          
 228          void AD_control(void)
 229          {
 230   1          if(TIME_power_on_AD)
 231   1          {
 232   2            if(BAT_Voltage_value>2400)BAT_out=0;
 233   2            else if((BAT_Voltage_value<=2400)&&(BAT_Voltage_value>2200))BAT_out=1;
 234   2            else BAT_out=2; 
 235   2          }
 236   1      }
 237          /*
 238          u16 Get_Adc_Value(void)
 239          {
 240                  xdata WordTypeDef wAdcValue;
C51 COMPILER V9.60.0.0   ADC                                                               06/13/2022 14:10:38 PAGE 5   

 241                  ADCON0 = ADCON0|ADCS;                                                   // 置位ADCS,启动ADC
 242              while((ADCON0&ADCI)==0);                                    // 等待ADC转换完成
 243              wAdcValue.B.BHigh=ADCDH;
 244              wAdcValue.B.BLow=ADCDL;
 245                  ADCON0 = ADCON0&(~ADCI);                                        // 清标志位
 246                  return wAdcValue.W&0x0FFF;
 247          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    903    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
