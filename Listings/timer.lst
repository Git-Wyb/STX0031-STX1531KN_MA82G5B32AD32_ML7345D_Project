C51 COMPILER V9.60.0.0   TIMER                                                             03/18/2022 11:19:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\timer.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Objects\timer.obj)

line level    source

   1          #include "timer.h"
   2          
   3          /* PCA定时器为16位,最大计数65536,*/
   4          #if (MCU_SYSCLK == 3000000)
   5          #define PCA_RELOAD              (1500)  //f = PCA_CLK/PCA_RELOAD,PWM输出频率2.0K,PCA时钟为SysClk 3MHz
   6          #define Duty_Cycle      750       //50%
   7          #endif
   8          
   9          #if (MCU_SYSCLK == 4000000)
              #define PCA_RELOAD              (2000)  //f = PCA_CLK/PCA_RELOAD,PWM输出频率2.0K,PCA时钟为SysClk 4MHz
              #define Duty_Cycle      1000       //50%
              #endif
  13          
  14          #if (MCU_SYSCLK == 6000000)
              #define PCA_RELOAD              (3000)  //f = PCA_CLK/PCA_RELOAD,PWM输出频率2.0K,PCA时钟为SysClk 6MHz
              #define Duty_Cycle      1500       //50%
              #endif
  18          
  19          #if (MCU_SYSCLK == 16000000)
              #define PCA_RELOAD              (5926)  //f = PCA_CLK/PCA_RELOAD,PWM输出频率2.7K,PCA时钟为SysClk 16MHz
              #define Duty_Cycle      2963       //50%
              #endif
  23          
  24          #if (MCU_SYSCLK == 24000000)
              #define PCA_RELOAD              (8888)  //f = PCA_CLK/PCA_RELOAD,PWM输出频率2.7K,PCA时钟为SysClk 24MHz
              #define Duty_Cycle      4444       //50%
              #endif
  28          
  29          #define PCA_C           (65536)
  30          #define PCA_CL(x)               (u8)((PCA_C-(x))%256) 
  31          #define PCA_CH(x)       (u8)((PCA_C-(x))/256)
  32          
  33          xdata u16 Time_Tx_Out = 0;      
  34          /***********************************************************************************
  35          函数名称:   void InitTimer0(void)
  36          功能描述:Timer0初始化设置
  37                           定义T0为16位定时器,时钟为Sysclk/12 
  38          输入参数:   
  39          返回参数:     
  40          *************************************************************************************/
  41          void Init_Timer0(void)
  42          {
  43   1              TM_SetT0Mode_1_16BIT_TIMER();                   // 设置T0模式为16位模式
  44   1          
  45   1          TM_SetT0Clock_SYSCLK();            // 设置T0时钟源为 SYSCLK.
  46   1      
  47   1              TM_SetT0Gate_Disable(); 
  48   1                      
  49   1          TM_SetT0LowByte(TIMER_1T_1ms_TH);           // 设置T0低8位
  50   1              TM_SetT0HighByte(TIMER_1T_1ms_TH);              // 设置T0高8位
  51   1      
  52   1              TM_EnableT0();                                                  // 使能T0
  53   1          INT_EnTIMER0();                     //      使能T0中断
  54   1      }
C51 COMPILER V9.60.0.0   TIMER                                                             03/18/2022 11:19:27 PAGE 2   

  55          
  56          
  57          /***********************************************************************************
  58          函数名称:   void INT_T0(void)
  59          功能描述:T0 中断服务程序
  60                           间隔1ms
  61          输入参数:   
  62          返回参数:     
  63          *************************************************************************************/
  64          void INT_T0(void) interrupt INT_VECTOR_T0
  65          {
  66   1              TH0 = TIMER_1T_1ms_TH;
  67   1              TL0 = TIMER_1T_1ms_TH;
  68   1          
  69   1          FG_1ms = 1;
  70   1          if (TB_100ms)       --TB_100ms;
  71   1          else{                            
  72   2              TB_100ms = BASE_100ms;
  73   2              FG_100ms = 1;         // 100mS FLAG
  74   2              }
  75   1          if(Time_Tx_Out) --Time_Tx_Out;
  76   1      }
  77          
  78          
  79          void Init_PCA_PWM(void)
  80          {
  81   1          PCA_SetCLOCK_SYSCLK();          // PCA时钟为SysClk
  82   1          PCA_CH6_SetMode_PWM();          // PWM模式
  83   1          PCA_CH6_SetPWM_16Bit();         //
  84   1          PCA_SetPWM_EdgeAligned();       // 边沿对齐
  85   1          
  86   1          // 设置PWM占空比比较值
  87   1              PCA_CH6_SetValue(PCA_CH(Duty_Cycle),PCA_CL(Duty_Cycle));
  88   1          
  89   1          // 设置定时器计数值 PWM频率
  90   1              PCA_SetCounter(PCA_C-PCA_RELOAD);
  91   1              PCA_SetCounterReload(PCA_C-PCA_RELOAD);
  92   1      }
  93          
  94          void Init_Beep(void)
  95          {
  96   1          Init_PCA_PWM();
  97   1      }
  98          
  99          void Beep_On(void)
 100          {
 101   1          PCA_EnPCACounter();
 102   1      }
 103          
 104          void Beep_Off(void)
 105          {
 106   1          PCA_DisPCACounter();
 107   1          P20 = 0;
 108   1      }
 109          
 110          
 111          /*************************************************
 112          函数名称:     void DelayXus(u16 xUs)
 113          功能描述:       延时程序，单位为us
 114          调用函数:        
 115          输入参数:     u8 Us -> *1us  (1~255)
 116          输出参数:     
C51 COMPILER V9.60.0.0   TIMER                                                             03/18/2022 11:19:27 PAGE 3   

 117          *************************************************/
 118          void DelayXus(u8 xUs)
 119          {
 120   1              while(xUs!=0)
 121   1              {
 122   2                      _nop_();
 123   2                      _nop_();
 124   2                      xUs--;
 125   2              }
 126   1      }
 127          
 128          
 129          /*************************************************
 130          函数名称:     void DelayXms(u16 xMs)
 131          功能描述:     延时程序，单位为ms
 132          输入参数:     u16 xMs -> *1ms  (1~65535)
 133          输出参数:     
 134          *************************************************/
 135          
 136          void delay_ms(u8 ms) //
 137          {
 138   1          while(ms--)
 139   1          {
 140   2              DelayXus(100);
 141   2              DelayXus(100);
 142   2          }
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
