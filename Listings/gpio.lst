C51 COMPILER V9.60.0.0   GPIO                                                              06/11/2022 15:35:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\gpio.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) OBJECT(.\Objects\gpio.obj)

line level    source

   1          #include "gpio.h"
   2          
   3          
   4          /***********************************************************************************
   5          函数名称:   void InitPort(void)
   6          功能描述:   IO配置
   7          输入参数:   
   8          返回参数:     
   9          *************************************************************************************/
  10          void Init_Port(void)
  11          { 
  12   1          /* KEY OPEN/STOP: P12/P11; PIN_test_mode: P13*/
  13   1          //PORT_SetP1OpenDrain(BIT3);                // 设置 P11/P12/P13为开漏输出
  14   1          //P13 = 1;                                // P11/P12/P13设为输入模式
  15   1          PORT_EnP10P11P12P13PullHigh();                      // 使能 P10,P11,P12,P13 上拉
  16   1          
  17   1          /*KEY CLOSE:P25; BEEP:P20; 登录:P21; ML7345D_GPIO3:P24; 送信LED:P27 */
  18   1              PORT_SetP2OpenDrain(BIT1);                          // 设置P21 为开漏输出
  19   1          P21 = 1;                                            // P21设为输入模式
  20   1          
  21   1          PORT_SetP2PushPull(BIT0|BIT7);                      // 设置P20/P27 为推挽输出
  22   1          //P22 = 0;
  23   1          
  24   1          PORT_SetP2OpenDrain(BIT5);
  25   1          P25 = 1;                                            // 设置P25为输入
  26   1          
  27   1          PORT_EnP20P21P22P23PullHigh();                      // 使能 P20,P21,P22,P23 上拉
  28   1              PORT_EnP24P25P26P27PullHigh();                              // 使能 P24,P25,P26,P27 上拉
  29   1          P20 = 0;
  30   1          
  31   1          /* ML7345_RESETN:P34; ML7345D_POWER:P35; */
  32   1          PORT_SetP3PushPull(BIT5);                      // 设置P34/P35 为推挽输出
  33   1          
  34   1          /* PIN_POWER_CONTROL:P40 */
  35   1          PORT_SetP4PushPull(BIT0);                           // 设置P40为推挽输出
  36   1          
  37   1          //////////////////////test/////////////////////////
  38   1          //PORT_SetP6PushPull(BIT0);   //CLK OUT
  39   1          //AUXR0 &= ~(P60OC0|P60OC1);
  40   1          //AUXR0 |= (0x80|P60FD);      //MCK/2 output 
  41   1          //////////////////////test/////////////////////////
  42   1         
  43   1          ML7345_RESETN = 0;
  44   1          PIN_TX_LED = 0;
  45   1          PIN_POWER_CONTROL = 0;
  46   1          ML7345D_POWER = FG_NOT_allow_out;
  47   1          
  48   1          PORT_SetP2OpenDrain(BIT3|BIT4|BIT6);           //未用IO口全部设为输入
  49   1          P23=0;P24=0;P26=0;
  50   1          PORT_SetP3InputOnly(BIT2);
  51   1          PORT_SetP4OpenDrain(BIT1);
  52   1          P41=0;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   GPIO                                                              06/11/2022 15:35:37 PAGE 2   

  55          void SpiGpio_Init(void)
  56          {
  57   1          PORT_SetP1PushPull(BIT5|BIT7);                                      // 设置P15(MOSI),P17(SPICLK)为准双向口
  58   1          PORT_SetP2PushPull(BIT2);
  59   1              PORT_SetP1OpenDrain(BIT6);                                                      // 设置P16(MISO)为准双向口
  60   1          P16 = 1;                                            // 输入
  61   1              PORT_EnP14P15P16P17PullHigh();
  62   1          PORT_SetP3PushPull(BIT4);
  63   1      }
  64          
  65          void SpiGpio_UnInit(void)
  66          {
  67   1          PORT_SetP1OpenDrain(BIT5|BIT6|BIT7);
  68   1          PORT_SetP2OpenDrain(BIT2);
  69   1          P16 = 0;                                           
  70   1          P22 = 0;P15 = 0;P17 = 0;
  71   1          
  72   1          PORT_SetP3InputOnly(BIT4);
  73   1      }
  74          
  75          
  76          /***********************************************************************************
  77          函数名称:   void InitINT0(void)
  78          功能描述:   INT0初始化
  79          输入参数:   
  80          返回参数:  
  81          用于ML7345D 发送接收完成中断。
  82          *************************************************************************************/
  83          /*
  84          void Init_INT0(void)
  85          {
  86                  INT_SetINT0P32();                                               //设置INT0引脚P32
  87                  INT_SetINT0_DetectFallingEdge();                //设置INT0外部中断检测方式为下降沿检测
  88                  //INT_SetINT0_DetectRisingEdge();
  89              INT_SetINT0Filter_Sysclk_x3();                      //设置INT0滤波为（sysclk）*3
  90          }
  91          */
  92          
  93          /***********************************************************************************
  94          函数名称:   void InitINT1(void)
  95          功能描述:   INT1初始化
  96          输入参数:   
  97          返回参数:   
  98          ML7345D BER测试。
  99          *************************************************************************************/
 100          void Init_INT1(void)
 101          {
 102   1              INT_SetINT1P33();                                               //设置INT1引脚P33
 103   1              //INT_SetINT1_DetectRisingEdge();               
 104   1          INT_SetINT1_DetectFallingEdge();        //设置INT1外部中断检测方式为下降沿检测
 105   1              INT_SetINT1Filter_Sysclk_x3();                  //设置INT1滤波为（sysclk）*3
 106   1      }
 107          
 108          
 109          /***********************************************************************************
 110          函数名称:   void INT_INT0(void) 
 111          功能描述:INT0中断服务程序
 112          输入参数:   
 113          返回参数: 
 114          
 115          用于ML7345D发送接收完成中断。
 116          
C51 COMPILER V9.60.0.0   GPIO                                                              06/11/2022 15:35:37 PAGE 3   

 117          *************************************************************************************/
 118          void INT_INT0(void)             interrupt INT_VECTOR_INT0
 119          {
 120   1          ML7345_TRX_Del();
 121   1      }
 122          
 123          
 124          /***********************************************************************************
 125          函数名称:   void INT_INT1(void) 
 126          功能描述:INT1中断服务程序
 127          输入参数:   
 128          返回参数:    
 129          
 130          ML7345D BER测试。
 131          
 132          *************************************************************************************/
 133          void INT_INT1(void)             interrupt INT_VECTOR_INT1
 134          {
 135   1          ML7345_TRX_Del();
 136   1      }
 137          
 138          
 139          /***********************************************************************************
 140          函数名称:   void InitInterrupt(void)
 141          功能描述:   中断初始化
 142          输入参数:    
 143          返回参数:     
 144          *************************************************************************************/
 145          void Init_Interrupt(void)
 146          {
 147   1          Init_INT1();
 148   1              INT_EnINT1();                   //      使能INT1中断
 149   1      }
 150          
 151          
 152          /*
 153          u8 key_scan(void)
 154          {
 155              if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0))
 156              {
 157                  delay_ms(50);
 158                  if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0) && key_flag == 0)
 159                  {
 160                      key_flag = 1;
 161                      if(PIN_KEY_OPEN==0)         return 2;
 162                      else if (PIN_KEY_STOP==0)   return 3;
 163                      else if (PIN_KEY_CLOSE==0)  return 4;
 164                      else if (PIN_KEY_LOGIN==0)  return 5;
 165                      else return 1;
 166                  }
 167                  else return 0;
 168                      
 169              }
 170              else if(PIN_KEY_OPEN==1 && PIN_KEY_STOP==1 && PIN_KEY_CLOSE==1 && PIN_KEY_LOGIN==1)
 171              {
 172                  key_flag = 0;
 173                  return 0;
 174              }
 175              return 0;    
 176          }*/
 177          
 178          
C51 COMPILER V9.60.0.0   GPIO                                                              06/11/2022 15:35:37 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
