C51 COMPILER V9.60.0.0   GPIO                                                              03/18/2022 11:19:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\gpio.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) OBJECT(.\Objects\gpio.obj)

line level    source

   1          #include "gpio.h"
   2          
   3          
   4          /***********************************************************************************
   5          函数名称:   void InitPort(void)
   6          功能描述:   IO配置
   7          输入参数:   
   8          返回参数:     
   9          *************************************************************************************/
  10          void Init_Port(void)
  11          { 
  12   1          /* KEY OPEN/STOP: P12/P11; PIN_test_mode: P13*/
  13   1          PORT_SetP1OpenDrain(BIT1|BIT2|BIT3);                // 设置 P11/P12/P13为开漏输出
  14   1          P11 = 1;P12 = 1;P13 = 1;                            // P11/P12/P13设为输入模式
  15   1          PORT_EnP10P11P12P13PullHigh();                      // 使能 P10,P11,P12,P13 上拉
  16   1          
  17   1          /* SPI */
  18   1          //PORT_SetP1PushPull(BIT4|BIT5|BIT7);                                       // 设置P15(MOSI),P17(SPICLK)为准双向口
  19   1              //PORT_SetP1OpenDrain(BIT6);                                                    // 设置P16(MISO)为准双向口
  20   1          //P16 = 1;                                            // 输入
  21   1              //PORT_EnP14P15P16P17PullHigh();                                                // 使能 P14,P15,P16,P17 上拉
  22   1          
  23   1          /*KEY CLOSE:P25; BEEP:P20; 登录:P21; ML7345D_GPIO3:P24; 送信LED:P27 */
  24   1              PORT_SetP2OpenDrain(BIT1);                          // 设置P21 为开漏输出
  25   1          P21 = 1;                                            // P21设为输入模式
  26   1          
  27   1          PORT_SetP2PushPull(BIT0|BIT7);                      // 设置P20/P27 为推挽输出
  28   1          
  29   1          PORT_SetP2OpenDrain(BIT5);
  30   1          P25 = 1;                                            // 设置P25为输入
  31   1          
  32   1          PORT_EnP20P21P22P23PullHigh();                      // 使能 P20,P21,P22,P23 上拉
  33   1              PORT_EnP24P25P26P27PullHigh();                              // 使能 P24,P25,P26,P27 上拉
  34   1          P20 = 0;
  35   1      
  36   1          /* ML7345_RESETN:P34; ML7345D_POWER:P35; */
  37   1          PORT_SetP3PushPull(BIT4|BIT5);                      // 设置P34/P35 为推挽输出
  38   1          
  39   1          /* PIN_POWER_CONTROL:P40 */
  40   1          PORT_SetP4PushPull(BIT0);                           // 设置P40为推挽输出
  41   1          
  42   1          //////////////////////test/////////////////////////
  43   1          //PORT_SetP6PushPull(BIT0);   //CLK OUT
  44   1          //AUXR0 &= ~(P60OC0|P60OC1);
  45   1          //AUXR0 |= (0x80|P60FD);      //MCK/2 output 
  46   1          //////////////////////test/////////////////////////
  47   1         
  48   1          ML7345_RESETN = 0;
  49   1          PIN_TX_LED = 0;
  50   1          PIN_POWER_CONTROL = 0;
  51   1          ML7345D_POWER = FG_NOT_allow_out;
  52   1          
  53   1          PORT_SetP2OpenDrain(BIT2|BIT3|BIT4|BIT6);
  54   1          P22=1;P23=1;P24=1;P26=1;
C51 COMPILER V9.60.0.0   GPIO                                                              03/18/2022 11:19:26 PAGE 2   

  55   1          PORT_SetP3InputOnly(BIT2);
  56   1          PORT_SetP4OpenDrain(BIT1);
  57   1          P41=1;
  58   1      }
  59          
  60          void SpiGpio_Init(void)
  61          {
  62   1          PORT_SetP1PushPull(BIT4|BIT5|BIT7);                                 // 设置P15(MOSI),P17(SPICLK)为准双向口
  63   1              PORT_SetP1OpenDrain(BIT6);                                                      // 设置P16(MISO)为准双向口
  64   1          P16 = 1;                                            // 输入
  65   1              PORT_EnP14P15P16P17PullHigh();
  66   1      }
  67          
  68          void SpiGpio_UnInit(void)
  69          {
  70   1          PORT_SetP1OpenDrain(BIT4|BIT5|BIT6|BIT7);                                   // 设置P15(MOSI),P17(SPICLK)为准双向口                                          // 设置P16(M
             -ISO)为准双向口
  71   1          P16 = 1;                                            // 输入
  72   1          P14 = 1;P15 = 1;P17 = 1;
  73   1              //PORT_EnP14P15P16P17PullHigh();
  74   1      }
  75          
  76          
  77          /***********************************************************************************
  78          函数名称:   void InitINT0(void)
  79          功能描述:   INT0初始化
  80          输入参数:   
  81          返回参数:  
  82          用于ML7345D 发送接收完成中断。
  83          *************************************************************************************/
  84          /*
  85          void Init_INT0(void)
  86          {
  87                  INT_SetINT0P32();                                               //设置INT0引脚P32
  88                  INT_SetINT0_DetectFallingEdge();                //设置INT0外部中断检测方式为下降沿检测
  89                  //INT_SetINT0_DetectRisingEdge();
  90              INT_SetINT0Filter_Sysclk_x3();                      //设置INT0滤波为（sysclk）*3
  91          }
  92          */
  93          
  94          /***********************************************************************************
  95          函数名称:   void InitINT1(void)
  96          功能描述:   INT1初始化
  97          输入参数:   
  98          返回参数:   
  99          ML7345D BER测试。
 100          *************************************************************************************/
 101          void Init_INT1(void)
 102          {
 103   1              INT_SetINT1P33();                                               //设置INT1引脚P33
 104   1              //INT_SetINT1_DetectRisingEdge();               
 105   1          INT_SetINT1_DetectFallingEdge();        //设置INT1外部中断检测方式为下降沿检测
 106   1              INT_SetINT1Filter_Sysclk_x3();                  //设置INT1滤波为（sysclk）*3
 107   1      }
 108          
 109          
 110          /***********************************************************************************
 111          函数名称:   void INT_INT0(void) 
 112          功能描述:INT0中断服务程序
 113          输入参数:   
 114          返回参数: 
 115          
C51 COMPILER V9.60.0.0   GPIO                                                              03/18/2022 11:19:26 PAGE 3   

 116          用于ML7345D发送接收完成中断。
 117          
 118          *************************************************************************************/
 119          void INT_INT0(void)             interrupt INT_VECTOR_INT0
 120          {
 121   1          ML7345_TRX_Del();
 122   1      }
 123          
 124          
 125          /***********************************************************************************
 126          函数名称:   void INT_INT1(void) 
 127          功能描述:INT1中断服务程序
 128          输入参数:   
 129          返回参数:    
 130          
 131          ML7345D BER测试。
 132          
 133          *************************************************************************************/
 134          void INT_INT1(void)             interrupt INT_VECTOR_INT1
 135          {
 136   1          ML7345_TRX_Del();
 137   1      }
 138          
 139          
 140          /***********************************************************************************
 141          函数名称:   void InitInterrupt(void)
 142          功能描述:   中断初始化
 143          输入参数:    
 144          返回参数:     
 145          *************************************************************************************/
 146          void Init_Interrupt(void)
 147          {
 148   1          Init_INT1();
 149   1              INT_EnINT1();                   //      使能INT1中断
 150   1      }
 151          
 152          
 153          /*
 154          u8 key_scan(void)
 155          {
 156              if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0))
 157              {
 158                  delay_ms(50);
 159                  if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0) && key_flag == 0)
 160                  {
 161                      key_flag = 1;
 162                      if(PIN_KEY_OPEN==0)         return 2;
 163                      else if (PIN_KEY_STOP==0)   return 3;
 164                      else if (PIN_KEY_CLOSE==0)  return 4;
 165                      else if (PIN_KEY_LOGIN==0)  return 5;
 166                      else return 1;
 167                  }
 168                  else return 0;
 169                      
 170              }
 171              else if(PIN_KEY_OPEN==1 && PIN_KEY_STOP==1 && PIN_KEY_CLOSE==1 && PIN_KEY_LOGIN==1)
 172              {
 173                  key_flag = 0;
 174                  return 0;
 175              }
 176              return 0;    
 177          }*/
C51 COMPILER V9.60.0.0   GPIO                                                              03/18/2022 11:19:26 PAGE 4   

 178          
 179          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
