C51 COMPILER V9.60.0.0   GPIO                                                              03/28/2022 17:38:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\gpio.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) OBJECT(.\Objects\gpio.obj)

line level    source

   1          #include "gpio.h"
   2          
   3          
   4          /***********************************************************************************
   5          函数名称:   void InitPort(void)
   6          功能描述:   IO配置
   7          输入参数:   
   8          返回参数:     
   9          *************************************************************************************/
  10          void Init_Port(void)
  11          { 
  12   1          /* KEY OPEN/STOP: P12/P11; PIN_test_mode: P13*/
  13   1          PORT_SetP1OpenDrain(BIT1|BIT2|BIT3);                // 设置 P11/P12/P13为开漏输出
  14   1          P11 = 1;P12 = 1;P13 = 1;                            // P11/P12/P13设为输入模式
  15   1          PORT_EnP10P11P12P13PullHigh();                      // 使能 P10,P11,P12,P13 上拉
  16   1          
  17   1          /* SPI */
  18   1          //PORT_SetP1PushPull(BIT4|BIT5|BIT7);                                       // 设置P15(MOSI),P17(SPICLK)为准双向口
  19   1              //PORT_SetP1OpenDrain(BIT6);                                                    // 设置P16(MISO)为准双向口
  20   1          //P16 = 1;                                            // 输入
  21   1              //PORT_EnP14P15P16P17PullHigh();                                                // 使能 P14,P15,P16,P17 上拉
  22   1          
  23   1          /*KEY CLOSE:P25; BEEP:P20; 登录:P21; ML7345D_GPIO3:P24; 送信LED:P27 */
  24   1              PORT_SetP2OpenDrain(BIT1);                          // 设置P21 为开漏输出
  25   1          P21 = 1;                                            // P21设为输入模式
  26   1          
  27   1          PORT_SetP2PushPull(BIT0|BIT7);                      // 设置P20/P27 为推挽输出
  28   1          
  29   1          PORT_SetP2OpenDrain(BIT5);
  30   1          P25 = 1;                                            // 设置P25为输入
  31   1          
  32   1          PORT_EnP20P21P22P23PullHigh();                      // 使能 P20,P21,P22,P23 上拉
  33   1              PORT_EnP24P25P26P27PullHigh();                              // 使能 P24,P25,P26,P27 上拉
  34   1          P20 = 0;
  35   1          
  36   1          /* ML7345_RESETN:P34; ML7345D_POWER:P35; */
  37   1          PORT_SetP3PushPull(BIT5);                      // 设置P34/P35 为推挽输出
  38   1          
  39   1          /* PIN_POWER_CONTROL:P40 */
  40   1          PORT_SetP4PushPull(BIT0);                           // 设置P40为推挽输出
  41   1          
  42   1          //////////////////////test/////////////////////////
  43   1          //PORT_SetP6PushPull(BIT0);   //CLK OUT
  44   1          //AUXR0 &= ~(P60OC0|P60OC1);
  45   1          //AUXR0 |= (0x80|P60FD);      //MCK/2 output 
  46   1          //////////////////////test/////////////////////////
  47   1         
  48   1          ML7345_RESETN = 0;
  49   1          PIN_TX_LED = 0;
  50   1          PIN_POWER_CONTROL = 0;
  51   1          ML7345D_POWER = FG_NOT_allow_out;
  52   1          
  53   1          PORT_SetP2OpenDrain(BIT2|BIT3|BIT4|BIT6);           //未用IO口全部设为输入
  54   1          P22=0;P23=0;P24=0;P26=0;
C51 COMPILER V9.60.0.0   GPIO                                                              03/28/2022 17:38:17 PAGE 2   

  55   1          PORT_SetP3InputOnly(BIT2);
  56   1          PORT_SetP4OpenDrain(BIT1);
  57   1          P41=0;
  58   1      }
  59          
  60          void SpiGpio_Init(void)
  61          {
  62   1          PORT_SetP1PushPull(BIT4|BIT5|BIT7);                                 // 设置P15(MOSI),P17(SPICLK)为准双向口
  63   1              PORT_SetP1OpenDrain(BIT6);                                                      // 设置P16(MISO)为准双向口
  64   1          P16 = 1;                                            // 输入
  65   1              PORT_EnP14P15P16P17PullHigh();
  66   1          PORT_SetP3PushPull(BIT4);
  67   1      }
  68          
  69          void SpiGpio_UnInit(void)
  70          {
  71   1          PORT_SetP1OpenDrain(BIT4|BIT5|BIT6|BIT7);
  72   1          P16 = 0;                                           
  73   1          P14 = 0;P15 = 0;P17 = 0;
  74   1          
  75   1          PORT_SetP3InputOnly(BIT4);
  76   1      }
  77          
  78          
  79          /***********************************************************************************
  80          函数名称:   void InitINT0(void)
  81          功能描述:   INT0初始化
  82          输入参数:   
  83          返回参数:  
  84          用于ML7345D 发送接收完成中断。
  85          *************************************************************************************/
  86          /*
  87          void Init_INT0(void)
  88          {
  89                  INT_SetINT0P32();                                               //设置INT0引脚P32
  90                  INT_SetINT0_DetectFallingEdge();                //设置INT0外部中断检测方式为下降沿检测
  91                  //INT_SetINT0_DetectRisingEdge();
  92              INT_SetINT0Filter_Sysclk_x3();                      //设置INT0滤波为（sysclk）*3
  93          }
  94          */
  95          
  96          /***********************************************************************************
  97          函数名称:   void InitINT1(void)
  98          功能描述:   INT1初始化
  99          输入参数:   
 100          返回参数:   
 101          ML7345D BER测试。
 102          *************************************************************************************/
 103          void Init_INT1(void)
 104          {
 105   1              INT_SetINT1P33();                                               //设置INT1引脚P33
 106   1              //INT_SetINT1_DetectRisingEdge();               
 107   1          INT_SetINT1_DetectFallingEdge();        //设置INT1外部中断检测方式为下降沿检测
 108   1              INT_SetINT1Filter_Sysclk_x3();                  //设置INT1滤波为（sysclk）*3
 109   1      }
 110          
 111          
 112          /***********************************************************************************
 113          函数名称:   void INT_INT0(void) 
 114          功能描述:INT0中断服务程序
 115          输入参数:   
 116          返回参数: 
C51 COMPILER V9.60.0.0   GPIO                                                              03/28/2022 17:38:17 PAGE 3   

 117          
 118          用于ML7345D发送接收完成中断。
 119          
 120          *************************************************************************************/
 121          void INT_INT0(void)             interrupt INT_VECTOR_INT0
 122          {
 123   1          ML7345_TRX_Del();
 124   1      }
 125          
 126          
 127          /***********************************************************************************
 128          函数名称:   void INT_INT1(void) 
 129          功能描述:INT1中断服务程序
 130          输入参数:   
 131          返回参数:    
 132          
 133          ML7345D BER测试。
 134          
 135          *************************************************************************************/
 136          void INT_INT1(void)             interrupt INT_VECTOR_INT1
 137          {
 138   1          ML7345_TRX_Del();
 139   1      }
 140          
 141          
 142          /***********************************************************************************
 143          函数名称:   void InitInterrupt(void)
 144          功能描述:   中断初始化
 145          输入参数:    
 146          返回参数:     
 147          *************************************************************************************/
 148          void Init_Interrupt(void)
 149          {
 150   1          Init_INT1();
 151   1              INT_EnINT1();                   //      使能INT1中断
 152   1      }
 153          
 154          
 155          /*
 156          u8 key_scan(void)
 157          {
 158              if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0))
 159              {
 160                  delay_ms(50);
 161                  if((PIN_KEY_OPEN==0 | PIN_KEY_STOP==0 | PIN_KEY_CLOSE==0 | PIN_KEY_LOGIN==0) && key_flag == 0)
 162                  {
 163                      key_flag = 1;
 164                      if(PIN_KEY_OPEN==0)         return 2;
 165                      else if (PIN_KEY_STOP==0)   return 3;
 166                      else if (PIN_KEY_CLOSE==0)  return 4;
 167                      else if (PIN_KEY_LOGIN==0)  return 5;
 168                      else return 1;
 169                  }
 170                  else return 0;
 171                      
 172              }
 173              else if(PIN_KEY_OPEN==1 && PIN_KEY_STOP==1 && PIN_KEY_CLOSE==1 && PIN_KEY_LOGIN==1)
 174              {
 175                  key_flag = 0;
 176                  return 0;
 177              }
 178              return 0;    
C51 COMPILER V9.60.0.0   GPIO                                                              03/28/2022 17:38:17 PAGE 4   

 179          }*/
 180          
 181          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
