C51 COMPILER V9.60.0.0   EXIT_FUN                                                          03/28/2022 17:38:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXIT_FUN
OBJECT MODULE PLACED IN .\Objects\EXIT_FUN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\EXIT_FUN.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\EXIT_FUN.lst) OBJECT(.\Objects\EXIT_FUN.obj)

line level    source

   1          /***********************************************************************/
   2          /*  FILE        :EXIT_FUN.c                                            */
   3          /*  DATE        :Mar, 2014                                             */
   4          /*  Programmer  :xiang 'R                                              */
   5          /*  CPU TYPE    :STM8S003f3     Crystal: 4M HSI                        */
   6          /*  DESCRIPTION :                                                      */
   7          /*  Mark        :ver 1.0                                               */
   8          /***********************************************************************/ 
   9          #include "EXIT_FUN.h"
  10          
  11          /*
  12          void EXTI_PORTA1(void)
  13          {
  14              if(FLAG_APP_TX == 1)
  15              {
  16                  if(txphase_Repeat == 0) 
  17                  {
  18                      ML7345_SetAndGet_State(Force_TRX_OFF);
  19                      ML7345_AutoTx_Data(m_RFNormalBuf,txphase_end);
  20                      txphase_Repeat++;
  21                  }
  22                  else if(txphase_Repeat < 3 && Flag_TxDone == 1)
  23                  {
  24                      Flag_TxDone = 0;
  25                      ML7345_AutoTx_Data(m_RFNormalBuf,txphase_end);
  26                      txphase_Repeat++;
  27                  }
  28                  else if(txphase_Repeat == 3 && Flag_TxDone == 1)
  29                  {
  30                      Flag_TxDone = 0;
  31                      FLAG_APP_TX = 0;
  32                      PIN_TX_LED = 0;
  33                      ML7345D_POWER = FG_NOT_allow_out;
  34                  }
  35              }
  36          }*/
  37          
  38          void SendTxData(void)
  39          {
  40   1          PIN_TX_LED = 1;
  41   1          if(m_RegMode==0)
  42   1          {
  43   2              SetTxData(0,ID_data,Control_code);
  44   2              m_RFNormalBuf[12] = 0xFF;
  45   2              txphase_end = 13;
  46   2              Time_Tx_Out = 550;
  47   2          }
  48   1          else 
  49   1          {
  50   2              SetTxData(0,ID_data,0x80);
  51   2              if(m_RegMode==1)    SetTxData(12,ID_data_add,0xFF);    //"1"是追加
  52   2              else SetTxData(12,ID_data_add,0);    //"2"是抹消
  53   2              m_RFNormalBuf[24] = 0xFF;
  54   2              txphase_end = 25;
C51 COMPILER V9.60.0.0   EXIT_FUN                                                          03/28/2022 17:38:21 PAGE 2   

  55   2              Time_Tx_Out = 800;
  56   2          }
  57   1          FLAG_APP_TX = 1;
  58   1          ML7345_AutoTx_Data(m_RFNormalBuf,txphase_end);
  59   1          txphase_Repeat = 1;
  60   1      }
  61          
  62          void SetTxData(u8 count_set ,uni_rom_id ID_data_set,u8 Control_code_set)
  63          {
  64   1          idata uni_i unii,unij,unik;
  65   1              /*      ID set  */
  66   1              unii.ui = SetFixedLengthCode(ID_data_set.IDB[3]) ;
  67   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  68   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;
  69   1              unii.ui = SetFixedLengthCode(ID_data_set.IDB[2]) ;
  70   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  71   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;
  72   1              unii.ui = SetFixedLengthCode(ID_data_set.IDB[1]) ;
  73   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  74   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;
  75   1              /*      Control code set        */
  76   1              unii.ui = SetFixedLengthCode(Control_code_set) ;
  77   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  78   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;
  79   1              /*      SUM set */
  80   1              unii.uc[1] = ID_data_set.IDB[1] ;
  81   1              unii.uc[0] = Control_code_set;
  82   1              unij.uc[1] = ID_data_set.IDB[3] ;
  83   1              unij.uc[0] = ID_data_set.IDB[2] ;
  84   1              unik.ui = unii.ui + unij.ui ;
  85   1              unii.ui = SetFixedLengthCode(unik.uc[1]) ;
  86   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  87   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;
  88   1              unii.ui = SetFixedLengthCode(unik.uc[0]) ;
  89   1              m_RFNormalBuf[count_set++] = unii.uc[0] ;
  90   1              m_RFNormalBuf[count_set++] = unii.uc[1] ;    
  91   1      }
  92          
  93          u16 SetFixedLengthCode(u8 Data)
  94          {
  95   1              idata u16 Code;
  96   1              idata u8 i;
  97   1      
  98   1              for     (i=0; i<8; i++)
  99   1              {
 100   2                      Code <<=2 ;
 101   2                      if      ( Data & 0x01)          // '1' ?
 102   2                      {                                       // Yes
 103   3                              Code |= 0x0002 ;
 104   3                      }
 105   2                      else
 106   2                      {
 107   3                              Code |= 0x0001 ;      // '0'
 108   3      
 109   3                      }
 110   2                      Data >>= 1 ;
 111   2              }
 112   1              return(Code) ;
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   EXIT_FUN                                                          03/28/2022 17:38:21 PAGE 3   

   CODE SIZE        =    763    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =      9    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
